{"version":3,"sources":["components/api/component/MovieCard.js","components/api/container/MovieSearch.js","components/api/Api.js","components/todoLIst/hooks/TodoContext.js","components/todoLIst/components/TodoHead.js","components/todoLIst/components/TodoTemplate.js","components/todoLIst/components/TodoItem.js","components/todoLIst/components/TodoList.js","components/todoLIst/components/TodoCreate.js","components/todoLIst/TodoList.js","components/home/Home.js","components/parameter/Prameter.js","components/menu/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["CardImg","styled","div","props","image","MovieCard","item","title","link","pubDate","userRating","className","Search","Input","MovieSearch","useState","query","setQuery","setItems","handleButton","a","axios","get","headers","params","res","console","log","status","data","items","style","display","justifyContent","padding","placeholder","onChange","e","target","value","onClick","width","jsonData","map","xs","sm","md","lg","xl","Api","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","length","TodoTemplateBlock","TodoTemplate","Remove","TodoItemBlock","CheckCircle","css","Text","TodoItem","React","memo","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","input","TodoCreate","setOpen","setValue","useTodoNextId","onSubmit","preventDefault","current","autoFocus","GlobalStyle","createGlobalStyle","Home","height","textAlign","color","background","profileData","velopert","name","description","gildong","yangrake","Parameter","username","match","profile","Menu","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.362b2ac9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport styled from 'styled-components';\r\n\r\nconst CardImg = styled.div`\r\n    width: 100%;\r\n    height: 200px;\r\n    background-image: url(${(props) => props.image});\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    z-index: 111 !important;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    -webkit-mask-image: -webkit-gradient(\r\n        linear,\r\n        left top,\r\n        left bottom,\r\n        color-stop(0, rgba(0, 0, 0, 1)),\r\n        color-stop(0.35, rgba(0, 0, 0, 1)),\r\n        color-stop(0.5, rgba(0, 0, 0, 1)),\r\n        color-stop(0.65, rgba(0, 0, 0, 1)),\r\n        color-stop(0.85, rgba(0, 0, 0, 0.6)),\r\n        color-stop(1, rgba(0, 0, 0, 0))\r\n    );\r\n    position: relative;\r\n`;\r\n\r\nconst MovieCard = ({ item }) => {\r\n    const { title, link, image, pubDate, userRating } = item;\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"movie-card-container\">\r\n                <CardImg image={image} />\r\n                <div className=\"movie-text\">\r\n                    <h2>{title}</h2>\r\n                    <div>{`${pubDate} 년도`}</div>\r\n                    <div className=\"movie-summary-row\">\r\n                        <h5>평점</h5>\r\n                    </div>\r\n                    <div className=\"movie-likes\">{`${userRating}/ 10`}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Input, Row, Col } from 'antd';\r\nimport MovieCard from '../component/MovieCard';\r\nimport jsonData from './item.json';\r\nimport axios from 'axios';\r\n\r\nconst { Search } = Input;\r\n\r\nconst MovieSearch = () => {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const [users, setUsers] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleQuery = (e) => {\r\n        setQuery(e.target.value);\r\n    };\r\n\r\n    const [items, setItems] = useState();\r\n\r\n    const handleButton = async () => {\r\n        const id = 'fL5n79Up3QPwUzn_Bw1t';\r\n        const secret = 'ef3yMkSsJK';\r\n        try {\r\n            const res = await axios.get('https://openapi.naver.com/v1/search/movie.json', {\r\n                headers: {\r\n                    'X-Naver-Client-Id': id,\r\n                    'X-Naver-Client-Secret': secret,\r\n                },\r\n                params: {\r\n                    query: query,\r\n                },\r\n            });\r\n            console.log(res);\r\n            if (res && res.status === 200) {\r\n                const { data } = res;\r\n                setItems(data.items);\r\n            }\r\n        } catch (e) {\r\n            console.log('error', e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{ display: 'flex', justifyContent: 'center', padding: '2rem' }}>\r\n                <Search\r\n                    placeholder=\"영화 검색을 해보세요!\"\r\n                    onChange={handleQuery}\r\n                    onClick={handleButton}\r\n                    style={{ width: 200 }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Row>\r\n                    {jsonData.items.map((item) => {\r\n                        return (\r\n                            <Col xs={24} sm={12} md={6} lg={4} xl={4}>\r\n                                <MovieCard item={item}></MovieCard>;\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\nexport default MovieSearch;\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport MovieSearch from './container/MovieSearch';\r\nimport './component/MovieCard.scss';\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <MovieSearch />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Api;\r\n","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: '프로젝트 생성하기',\r\n        done: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        text: '컴포넌트 스타일링하기',\r\n        done: true,\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Context 만들기',\r\n        done: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        text: '기능 구현하기',\r\n        done: false,\r\n    },\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map((todo) => (todo.id === action.id ? { ...todo, done: !todo.done } : todo));\r\n        case 'REMOVE':\r\n            return state.filter((todo) => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>{children}</TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n    if (!context) {\r\n        throw new Error('Cannot find TodoProvider');\r\n    }\r\n    return context;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../hooks/TodoContext';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding-top: 48px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nfunction TodoHead() {\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter((todo) => !todo.done);\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n    });\r\n    const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n\r\n    return (\r\n        <TodoHeadBlock>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"day\">{dayName}</div>\r\n            <div className=\"tasks-left\">{undoneTasks.length}개 남음</div>\r\n        </TodoHeadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\r\n\r\n    margin-top: 66px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n    return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n}\r\n\r\nexport default TodoTemplate;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../hooks/TodoContext';\r\n\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n    display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${Remove} {\r\n            display: initial;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${(props) =>\r\n        props.done &&\r\n        css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n        `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${(props) =>\r\n        props.done &&\r\n        css`\r\n            color: #ced4da;\r\n        `}\r\n`;\r\n\r\nfunction TodoItem({ id, done, text }) {\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n    const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n\r\n    return (\r\n        <TodoItemBlock>\r\n            <CheckCircle done={done} onClick={onToggle}>\r\n                {done && <MdDone />}\r\n            </CheckCircle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete />\r\n            </Remove>\r\n        </TodoItemBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoItem);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../hooks/TodoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList() {\r\n    const todos = useTodoState();\r\n\r\n    return (\r\n        <TodoListBlock>\r\n            {todos.map((todo) => (\r\n                <TodoItem key={todo.id} id={todo.id} text={todo.text} done={todo.done} />\r\n            ))}\r\n        </TodoListBlock>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../hooks/TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n    background: #38d9a9;\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    color: white;\r\n    border-radius: 50%;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${(props) =>\r\n        props.open &&\r\n        css`\r\n            background: #ff6b6b;\r\n            &:hover {\r\n                background: #ff8787;\r\n            }\r\n            &:active {\r\n                background: #fa5252;\r\n            }\r\n            transform: translate(-50%, 50%) rotate(45deg);\r\n        `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding-left: 32px;\r\n    padding-top: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 72px;\r\n\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = (e) => setValue(e.target.value);\r\n    const onSubmit = (e) => {\r\n        e.preventDefault(); // 새로고침 방지\r\n        dispatch({\r\n            type: 'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false,\r\n            },\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <InsertFormPositioner>\r\n                    <InsertForm onSubmit={onSubmit}>\r\n                        <Input\r\n                            autoFocus\r\n                            placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\r\n                            onChange={onChange}\r\n                            value={value}\r\n                        />\r\n                    </InsertForm>\r\n                </InsertFormPositioner>\r\n            )}\r\n            <CircleButton onClick={onToggle} open={open}>\r\n                <MdAdd />\r\n            </CircleButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoCreate);\r\n","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport TodoHead from './components/TodoHead';\r\nimport TodoTemplate from './components/TodoTemplate';\r\nimport TodoLists from './components/TodoList';\r\nimport TodoCreate from './components/TodoCreate';\r\nimport { TodoProvider } from './hooks/TodoContext';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body {\r\n        background: #e9ecef;\r\n    }\r\n`;\r\n\r\nconst TodoList = () => {\r\n    return (\r\n        <TodoProvider>\r\n            <GlobalStyle />\r\n            <TodoTemplate>\r\n                <TodoHead />\r\n                <TodoLists />\r\n                <TodoCreate />\r\n            </TodoTemplate>\r\n        </TodoProvider>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div style={{ height: '200px', width: '100%', textAlign: 'center', color: 'red', background: 'green' }}>\r\n                동영상한번?\r\n            </div>\r\n\r\n            <h1>홈</h1>\r\n            <p>이곳은 홈이에요, 가장 먼저 보여지는 페이지죠</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\n// 파라미터 연습 데이터\r\nconst profileData = {\r\n    velopert: {\r\n        name: '김민준 개발자님',\r\n        description: '출처 : https://react.vlpt.us/react-router/02-params-and-query.html',\r\n    },\r\n    gildong: {\r\n        name: '홍길동',\r\n        description: '전래동화의 주인공',\r\n    },\r\n    yangrake: {\r\n        name: 'yanglog',\r\n        description: '뉴비 개발자',\r\n    },\r\n};\r\n\r\nconst Parameter = ({ match }) => {\r\n    // 파라미터를 받아올 땐 match 안에 들어있는 params 값을 참조 합니다.\r\n    const { username } = match.params;\r\n    const profile = profileData[username];\r\n\r\n    if (!profile) {\r\n        return <div>존재하지 않는 유저입니다.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>\r\n                {username}({profile.name})\r\n            </h3>\r\n            <p>{profile.description}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Parameter;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Menu.css';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className=\"menu\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">HOME</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/api\">API</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/todolist\">TODOLIST</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Api from './components/api/Api';\nimport TodoList from './components/todoLIst/TodoList';\nimport Home from './components/home/Home';\nimport Parameter from './components/parameter/Prameter';\nimport Menu from './components/menu/Menu';\n\nfunction App() {\n    return (\n        <div className=\"all\">\n            <Menu />\n            <hr />\n\n            {/* ROUTE 모음 */}\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/api\" component={Api} />\n            <Route path=\"/todolist\" component={TodoList} />\n            <Route path=\"/parameter/:username\" component={Parameter} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}